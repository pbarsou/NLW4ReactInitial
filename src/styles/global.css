* { /* para todo o documento */
  margin: 0;
  padding: 0;
  box-sizing: border-box; /* para manter as proporções da caixa sem somar os paddings que forem 
  adicionados /* por padrão é 'content-box', que pega o conteúdo e soma os paddings */
  /* a partir de agora todas as caixas manterão esse padrão */ 
}

:root { /* ': root' é referente a tag <html> */
  --white:#fff;
  --background:#f2f3f5;
  --gray-line:#dcdde0;
  --text:#666666;
  --text-highlight:#b3b9ff;
  --title: #2e384d;
  --red:#e83f5b;
  --green:#4cd62b;
  --blue:#5965e0;
  --blue-dark:#4953b8;
  --blue-twitter:#2aa9e0;
} /* cores que foram utilizadas no projeto */

@media(max-width: 1080px) { 
  html {
    font-size: 93.75%; /* que equivale a 15px (já que o tamanho padrão de 'font-size' é 16px) */
  }
} /* o '@media' funciona de forma que as regras só serão executadas após o que está sendo passado como 
parâmetro for verdadeiro */ /* então, se a tela for no mínimo de 1080px */

@media(max-width: 720px) {
  html {
    font-size: 87.5%; /* que equivale a 14px (já que o tamanho padrão de 'font-size' é 16px) */
  }
} /* o '@media' funciona de forma que as regras só serão executadas após o que está sendo passado como 
parâmetro for verdadeiro */ /* então, se a tela for no mínimo de 760px */

body {
  background:var(--background); /* é assim que se usa as cores*/
  color:var(--text);
}

body, input, texarea, button {
  font: 400 1rem "Inter", sans-serif;
}

button {
  cursor: pointer;
}

a {
  color: inherit; /* herda a cor do container do link */
}

.container {
  height: 100vh;
  max-width: 992px;
  margin: 0 auto; /* 0 em cima e em baixo e 'auto' para centralizarmos nas laterais */
  padding: 2.5rem 2rem;
  display: flex;
  flex-direction: column; /* para os elementos serem posicionados um abaixo do outro */
}

.experience-bar {
  display: flex;
  align-items: center;
}

.experience-bar span {
  font-size: 1rem;
}

.experience-bar > div { /* pega a 'div' de nível mais alto */
  flex: 1; /* faz ocupar a largura máxima do container */
  height: 4px; /* não estamos usando 'rem' porque queremos que tenha o mesmo tamanho em diferentes telas  */
  border-radius: 4px;
  background: var(--gray-line);
  margin: 0 1.5rem;
  position: relative; /* para a 'div ter como referência ela mesma */
}

.experience-bar > div div {
  height: 4px;
  border-radius: 4px;
  background: var(--green);
}

.experience-bar > div span.current-experience {
  position: absolute; /* a referência passa a ser a 'div' */
  top: 12px;
  transform: translateX(-50%); /* pra 'ancor' do elemento ficar ao centro */
}